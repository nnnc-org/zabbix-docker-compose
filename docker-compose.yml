version: '3.5'
services:
  zabbix-server:
    image: zabbix/zabbix-server-pgsql:ubuntu-7.0-latest
    ports:
      - "10051:10051"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./zbx_env/usr/lib/zabbix/alertscripts:/usr/lib/zabbix/alertscripts:ro
      - ./zbx_env/usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro
      - ./zbx_env/var/lib/zabbix/dbscripts:/var/lib/zabbix/dbscripts:ro
      - ./zbx_env/var/lib/zabbix/export:/var/lib/zabbix/export:rw
      - ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
      - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
      - ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
      - ./zbx_env/var/lib/zabbix/mibs:/var/lib/zabbix/mibs:ro
      - snmptraps:/var/lib/zabbix/snmptraps:rw
    #   - ./env_vars/.ZBX_DB_CA_FILE:/run/secrets/root-ca.pem:ro
    #   - ./env_vars/.ZBX_DB_CERT_FILE:/run/secrets/client-cert.pem:ro
    #   - ./env_vars/.ZBX_DB_KEY_FILE:/run/secrets/client-key.pem:ro
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    env_file:
      - ./env_vars/.env_db_pgsql
      - ./env_vars/.env_srv
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    depends_on:
      - postgres-server
    networks:
      zbx_net_backend:
        aliases:
          - zabbix-server
          - zabbix-server-pgsql
          - zabbix-server-ubuntu-pgsql
          - zabbix-server-pgsql-ubuntu
      zbx_net_frontend:
        ipv4_address: 172.16.238.250
    #  devices:
    #   - "/dev/ttyUSB0:/dev/ttyUSB0"
    stop_grace_period: 30s
    sysctls:
      - net.ipv4.ip_local_port_range=1024 65000
      - net.ipv4.conf.all.accept_redirects=0
      - net.ipv4.conf.all.secure_redirects=0
      - net.ipv4.conf.all.send_redirects=0
    labels:
      com.zabbix.description: "Zabbix server with PostgreSQL database support"
      com.zabbix.company: "Zabbix LLC"
      com.zabbix.component: "zabbix-server"
      com.zabbix.dbtype: "pgsql"
      com.zabbix.os: "ubuntu"

  zabbix-web-nginx-pgsql:
    image: zabbix/zabbix-web-nginx-pgsql:ubuntu-7.0-latest
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./zbx_env/etc/ssl/nginx:/etc/ssl/nginx:ro
      - ./zbx_env/usr/share/zabbix/modules/:/usr/share/zabbix/modules/:ro
      - ./zbx_env/certs:/usr/share/zabbix/certs/:ro
    deploy:
      resources:
        limits:
          cpus: '0.70'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    env_file:
      - ./env_vars/.env_db_pgsql
      - ./env_vars/.env_web
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    depends_on:
      - postgres-server
      - zabbix-server
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      zbx_net_backend:
        aliases:
          - zabbix-web-nginx-pgsql
          - zabbix-web-nginx-ubuntu-pgsql
          - zabbix-web-nginx-pgsql-ubuntu
      zbx_net_frontend:
    stop_grace_period: 10s
    sysctls:
      - net.core.somaxconn=65535
    labels:
      com.zabbix.description: "Zabbix frontend on Nginx web-server with PostgreSQL database support"
      com.zabbix.company: "Zabbix LLC"
      com.zabbix.component: "zabbix-frontend"
      com.zabbix.webserver: "nginx"
      com.zabbix.dbtype: "pgsql"
      com.zabbix.os: "ubuntu"
      traefik.enable: true
      traefik.docker.network: "zabbix_zbx_net_frontend"
      traefik.http.routers.zabbix.rule: "Host(`monitor.example.org`)"
      traefik.http.routers.zabbix.entrypoints: "websecure"
      traefik.http.routers.zabbix.tls.certresolver: "resolver"

  zabbix-agent:
    image: zabbix/zabbix-agent2:ubuntu-7.0-latest
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./zbx_env/etc/zabbix/zabbix_agentd.d:/etc/zabbix/zabbix_agentd.d:ro
      - ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
      - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
      - ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - ./env_vars/.env_agent
    privileged: true
    pid: "host"
    network_mode: "host"
      #networks:
      #zbx_net_backend:
      #aliases:
      # - zabbix-agent
      # - zabbix-agent-passive
      # - zabbix-agent-ubuntu
    stop_grace_period: 5s
    labels:
      com.zabbix.description: "Zabbix agent"
      com.zabbix.company: "Zabbix LLC"
      com.zabbix.component: "zabbix-agentd"
      com.zabbix.os: "ubuntu"

  zabbix-snmptraps:
    image: zabbix/zabbix-snmptraps:ubuntu-7.0-latest
    ports:
      - "162:1162/udp"
    volumes:
      - snmptraps:/var/lib/zabbix/snmptraps:rw
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    networks:
      zbx_net_frontend:
        aliases:
          - zabbix-snmptraps
      zbx_net_backend:
    stop_grace_period: 5s
    labels:
      com.zabbix.description: "Zabbix snmptraps"
      com.zabbix.company: "Zabbix LLC"
      com.zabbix.component: "snmptraps"
      com.zabbix.os: "ubuntu"

  zabbix-web-service:
    image: zabbix/zabbix-web-service:ubuntu-7.0-latest
    profiles:
      - full
      - all
    ports:
      - "10053:10053"
    volumes:
      - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
    security_opt:
      - seccomp:./env_vars/chrome_dp.json
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    env_file:
      - ./env_vars/.env_web_service
    networks:
      zbx_net_backend:
        aliases:
          - zabbix-web-service
          - zabbix-web-service-ubuntu
    stop_grace_period: 5s
    labels:
      com.zabbix.description: "Zabbix web service"
      com.zabbix.company: "Zabbix LLC"
      com.zabbix.component: "web-service"
      com.zabbix.os: "ubuntu"

  postgres-server:
    image: postgres:14-alpine
    #  command: -c ssl=on -c ssl_cert_file=/run/secrets/server-cert.pem -c ssl_key_file=/run/secrets/server-key.pem -c ssl_ca_file=/run/secrets/root-ca.pem
    volumes:
      - db:/var/lib/postgresql/data
      #- ./zbx_env/var/lib/postgresql/data:/var/lib/postgresql/data:rw
      - ./env_vars/.ZBX_DB_CA_FILE:/run/secrets/root-ca.pem:ro
      - ./env_vars/.ZBX_DB_CERT_FILE:/run/secrets/server-cert.pem:ro
      - ./env_vars/.ZBX_DB_KEY_FILE:/run/secrets/server-key.pem:ro
    env_file:
      - ./env_vars/.env_db_pgsql
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    stop_grace_period: 1m
    networks:
      zbx_net_backend:
        aliases:
          - postgres-server
          - pgsql-server
          - pgsql-database

  traefik:
    image: traefik:v2.11
    restart: always
    command:
      #- "--log.level=DEBUG"
      #- "--accesslog=true"
      - "--api.insecure=true"
      - "--api.dashboard"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.resolver.acme.dnschallenge=true"
      - "--certificatesresolvers.resolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.resolver.acme.dnschallenge.resolvers=1.1.1.1"
      #- "--certificatesresolvers.resolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.resolver.acme.email=techdept@esu2.org"
      - "--certificatesresolvers.resolver.acme.storage=/letsencrypt/acme.json"
      - "--experimental.plugins.rewrite.modulename=github.com/traefik/plugin-rewritebody"
      - "--experimental.plugins.rewrite.version=v0.3.1"
    environment:
      - CLOUDFLARE_EMAIL=test@example.org
      - CLOUDFLARE_DNS_API_TOKEN=XXXXX
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      zbx_net_frontend:

networks:
  zbx_net_frontend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
  zbx_net_backend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    internal: true
    ipam:
      driver: default
      config:
        - subnet: 172.16.239.0/24

volumes:
  snmptraps:
  db:
  letsencrypt:

secrets:
  POSTGRES_USER:
    file: ./env_vars/.POSTGRES_USER
  POSTGRES_PASSWORD:
    file: ./env_vars/.POSTGRES_PASSWORD
